name: Publish release

on:
  release:
    types: [released, prereleased]

jobs:
  release:
    name: Publish release
    runs-on: ubuntu-latest
    steps:
      - if: startsWith(${{ github.event.release.tag_name }}, "v")
        id: version
        run: echo "::set-output name=version::$(echo ${{ github.event.release.tag_name }} | cut -c2-)"
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
      - name: Setup GPG keys for signed commits
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - uses: actions/setup-node@v2
        with:
          registry-url: 'https://registry.npmjs.org'
      - name: Update package.json
        run: |
          cd server
          npm version ${{ steps.version.outputs.version }} --no-git-tag-version
          git add package.json
          git commit -m "${{ steps.version.outputs.version }}"
          git tag --force ${{ github.event.release.tag_name }} HEAD
          git push --force --tags
      - if: ${{ github.event.action == 'prereleased' }}
        name: Publish on npmjs.com [prerelease]
        run: |
          npm ci
          npm run build
          cp README.md server/README.md
          cd server
          npm publish --tag unstable
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - if: ${{ github.event.action == 'released' }}
        name: Publish on npmjs.com
        run: |
          npm ci
          npm run build
          cp README.md server/README.md
          cd server
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - if: ${{ github.event.action == 'prereleased' }}
        name: Publish to Docker Hub [prerelease]
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: true
          tags: bonukai/mediatracker:${{ steps.version.outputs.version }},bonukai/mediatracker:unstable
      - if: ${{ github.event.action == 'released' }}
        name: Publish to Docker Hub
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: true
          tags: bonukai/mediatracker:${{ steps.version.outputs.version }},bonukai/mediatracker:unstable,bonukai/mediatracker:latest
